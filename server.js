 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })



// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})
////////////Start of my changes

//Function to convert unix time to natural
  function toNatural(a){
    
    var date = new Date( a * 1000);
    
    var months= ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    
    var naturalDate = months[date.getMonth()] + " " + date.getDate() +", " + date.getFullYear() ;
  
    return naturalDate;
    
  }


app.get("/:time", function(req , res){
    var data = req.params.time; 
  
  //convert natural time to unix
  if(isNaN(data)){
    
    var date = new Date (data);
  if(isNaN(date)){  
    res.json({
      "Unix":null, 
      "Natural": null})
    
  }else{
    var unixtime = date / 1000;
    
   res.json({
      "Unix":unixtime, 
      "Natural": data}) 
    
  }
    
    
  }else{
    // convert the unix time to natural and assign it to variable.
    var naturaltime = toNatural(data);
    
    res.json({
      "Unix":data, 
      "Natural": naturaltime}) 
  }


});


//////////End of my changes

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

